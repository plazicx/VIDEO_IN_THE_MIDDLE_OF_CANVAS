{"id":"index.html","dependencies":[{"name":"_css_loader","parent":"D:\\PROJECTS\\VIDEO_ON_CANVAS\\index.html","resolved":"C:\\Users\\plazic\\AppData\\Roaming\\npm\\node_modules\\parcel\\src\\builtins\\css-loader.js"}],"generated":{"html":"  \r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>Display Webcam Stream</title>\r\n\r\n<style>.container {\r\n  margin: 0 auto;\r\n  position: relative;\r\n}\r\n\t.video {\r\n  width: 100%;\r\n  height: auto;\r\n  position:relative;\r\n  top: 800;\r\n  left: 500;\r\n}\r\n .canvas {\r\n\t position:absolute;\r\n\t top:0;\r\n\t left:0;\r\n\t z-index:0;\r\n\t background-color:rgba(255,0,0,0.5);\r\n }</style>\r\n\r\n<div class=\"container\">\r\n\r\n<video class=\"video\" id=\"player\" autoplay=\"\" src=\"http://upload.wikimedia.org/wikipedia/commons/7/79/Big_Buck_Bunny_small.ogv\"></video>\r\n<button id=\"capture\">Capture</button>\r\n<canvas class=\"canvas\" id=\"cv1\" width=\"1920\" height=\"1080\"></canvas> \r\n\r\n</div>\r\n\r\n<script>var player = document.getElementById('player');\nvar canvas = document.getElementById('cv1');\nvar context = canvas.getContext('2d');\nvar captureButton = document.getElementById('capture');\ncontext.beginPath();\ncontext.strokeStyle = '#003300';\ncontext.arc(100 * Math.random(), 75 * Math.random(), 50, 0, 2 * Math.PI);\ncontext.fillStyle = 'green';\ncontext.fill();\ncontext.lineWidth = 5;\ncontext.stroke(); //player.addEventListener(\"click\",fullscreen);\n\ncanvas.addEventListener(\"click\", fullscreen_canvas);\nvar constraints = {\n  video: true\n}; // set canvas size = video size when known\n\nif (1 === 1) {\n  player.addEventListener('loadedmetadata', function () {\n    cv1.width = 1920 / 2.; //1.2*player.videoWidth;\n\n    cv1.height = 1080 / 2.; //1.2*player.videoHeight;\n  });\n}\n/* captureButton.addEventListener('click', () => {\r\n   // Draw the video frame to the canvas.\r\n   context.drawImage(player, 0, 0, canvas.width, canvas.height);\r\n });\r\n*/\n// Attach the video stream to the video element and autoplay.\n\n\nif (1 === 1) {\n  navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n    player.srcObject = stream;\n  });\n}\n\nplayer.addEventListener('play', function () {\n  var $this = this; //cache\n\n  (function loop() {\n    if (!$this.paused && !$this.ended) {\n      ax = 0.5 * (canvas.width - player.videoWidth);\n      ay = 0.5 * (canvas.height - player.videoHeight);\n      console.log(ax, ay);\n      context.drawImage($this, ax, ay);\n      setTimeout(loop, 1000 / 30); // drawing at 30fps\n    }\n  })();\n}, 0);\n\nfunction fullscreen() {\n  console.log(\"video fullscreen\");\n  var el = document.getElementById('player');\n  context.beginPath();\n  context.arc(100 * Math.random(), 75 * Math.random(), 50, 0, 2 * Math.PI);\n  context.strokeStyle = '#003300';\n  context.stroke();\n\n  if (el.webkitRequestFullScreen) {\n    el.webkitRequestFullScreen();\n    resize_canvas(el);\n  } else {\n    el.mozRequestFullScreen();\n  }\n}\n\nfunction fullscreen_canvas() {\n  var el = document.getElementById('cv1');\n  console.log(\"canvas go full screen\");\n  context.beginPath();\n  context.strokeStyle = '#003300';\n  context.arc(1000 * Math.random(), 1000 * Math.random(), 50, 0, 2 * Math.PI);\n  context.fillStyle = 'green';\n  context.fill();\n  context.lineWidth = 5;\n  context.stroke();\n\n  if (el.webkitRequestFullScreen) {\n    el.webkitRequestFullScreen();\n  } else {\n    el.mozRequestFullScreen();\n  }\n}\n\nfunction resize_canvas(element) {\n  var w = element.offsetWidth;\n  var h = element.offsetHeight;\n  var cv = document.getElementById(\"cv1\");\n  cv.width = w;\n  cv.height = h;\n  context.beginPath();\n  context.strokeStyle = '#003300';\n  context.arc(100 * Math.random(), 75 * Math.random(), 50, 0, 2 * Math.PI);\n  context.fillStyle = 'green';\n  context.fill();\n  context.lineWidth = 5;\n  context.stroke();\n  console.log(\"resize canvas\");\n}\n\nfunction resize_video(element) {\n  var w = element.offsetWidth;\n  var h = element.offsetHeight;\n  var cv = document.getElementById(\"player\");\n  cv.width = w;\n  cv.height = h;\n  context.beginPath();\n  context.arc(100 * Math.random(), 75 * Math.random(), 50, 0, 2 * Math.PI);\n  context.strokeStyle = '#003300';\n  context.stroke();\n  console.log(\"resizing video\");\n}</script>\r\n\r\n\r\n\r\n<script src=\"https://cdn.jsdelivr.net/npm/phaser@3.15.1/dist/phaser-arcade-physics.min.js\"></script>\r\n\r\n</head></html>\r\n"},"sourceMaps":null,"error":null,"hash":"fb661028fcd97971f3f5e41d653c5942","cacheData":{"env":{}}}